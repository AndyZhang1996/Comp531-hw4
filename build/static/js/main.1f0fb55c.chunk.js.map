{"version":3,"sources":["components/Landing/Registration.js","components/Landing/Login.js","components/Landing/Landing.js","components/Profile/Update.js","components/Main/User.js","components/Main/Friend.js","components/Main/Post.js","components/Main/Main.js","components/Profile/Picture.js","components/Profile/Profile.js","App.js","serviceWorker.js","index.js"],"names":["Registration","props","state","accountName","emailAddress","phoneNumber","dob","ageValid","zipCode","password","passwordConfrm","passwordValid","userId","redirectMain","change","e","setState","target","name","value","ageValidation","a","replace","birthYear","Number","substring","birthMonth","birthDay","current","Date","currentYear","getFullYear","currentMonth","getMonth","currentDay","getDate","age","passwordValidation","document","getElementById","cancelForm","handleFormSubmit","preventDefault","handleSubmit","console","log","dobMsg","passwordMsg","style","innerHTML","localStorage","setItem","bind","className","this","to","push","placeholder","pattern","onChange","title","required","type","id","onKeyUp","onClick","Component","Login","userValid","userValidation","data","map","n","userName","username","address","street","fetchItems","fetch","returned","json","items","withRouter","Landing","color","width","Profile","componentDidMount","fetchUsers","email","phone","zipcode","submitHandler","event","getItem","onSubmit","noValidate","htmlFor","User","updateStatus","newStatus","handleLogout","redirectLogin","handleProfile","redirectProfile","Card","Img","variant","src","Body","Title","Text","status","Button","Friends","friendName","friendStatus","Post","postText","Main","fetchPosts","getUserFriendIds","i","tempArray","temp","friendsList","users","company","catchPhrase","getUserName","fetchFriends","userFriends","user","updatedUserFriends","length","friends","posts","newPosts","newPost","timeStamp","getUserPosts","post","body","userPosts","filteredPosts","addFriend","newFriend","newFriendName","addPost","increasedStamp","sort","b","parseInt","clearPost","handleStatusChange","handleSearch","searchPost","filterPost","filtered","filter","toLowerCase","includes","Row","Col","friend","Friend","Picture","handleMain","Update","PrivateRoute","component","rest","render","pathname","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f0fb55c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Registration.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Redirect, withRouter } from \"react-router-dom\"\n\nexport class Registration extends Component {\n\n\n  state = {\n    accountName: \"\",\n    emailAddress: \"\",\n    phoneNumber: \"\",\n    dob: \"\",\n    ageValid: \"\",\n    zipCode: \"\",\n    password: \"\",\n    passwordConfrm: \"\",\n    passwordValid: \"\",\n    userId: 11,\n    redirectMain: false\n  }\n  constructor(props) {\n    super(props)\n\n\n    this.state = {\n      accountName: \"\",\n      emailAddress: \"\",\n      phoneNumber: \"\",\n      dob: \"\",\n      ageValid: \"\",\n      zipCode: \"\",\n      password: \"\",\n      passwordConfrm: \"\",\n      passwordValid: \"\",\n      userId: 11,\n      redirectMain: false\n    }\n\n    this.change = this.change.bind(this)\n    this.ageValidation = this.ageValidation.bind(this)\n    this.passwordValidation = this.passwordValidation.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.cancelForm = this.cancelForm.bind(this)\n  }\n\n  change = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  ageValidation = async () => {\n    let dob = this.state.dob\n    dob = dob.replace(/\\D/g, '');              //convert to string and strip of the '-'\n    var birthYear = Number(dob.substring(0, 4));\n    var birthMonth = Number(dob.substring(4, 6)) - 1;\n    var birthDay = Number(dob.substring(6));\n    var current = new Date();\n    var currentYear = current.getFullYear();\n    var currentMonth = current.getMonth();\n    var currentDay = current.getDate();\n    var age = currentYear - birthYear;\n    if (currentMonth < birthMonth || (currentMonth === birthMonth && currentDay < birthDay)) {\n      age--;\n    }\n    if (age < 18) {\n      this.setState({ ageValid: false })\n    } else {\n      this.setState({ ageValid: true })\n    }\n  }\n\n  passwordValidation = e => {\n    let password = document.getElementById(\"password\");\n    let passwordConfrm = document.getElementById(\"passwordConfrm\");\n\n    if (password.value === passwordConfrm.value) {\n      this.setState({ passwordValid: true })\n    } else {\n      this.setState({ passwordValid: false })\n    }\n\n  }\n\n  cancelForm = () => {\n    this.setState({\n      accountName: \"\",\n      emailAddress: \"\",\n      phoneNumber: \"\",\n      dob: \"\",\n      ageValid: \"\",\n      zipCode: \"\",\n      password: \"\",\n      passwordConfrm: \"\",\n      passwordValid: \"\"\n    })\n  }\n\n  // handleSubmit = e => {\n\n  //   e.preventDefault();\n  //   //this.cancelForm()\n  // }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n  }\n\n  // handleSubmit = (e) => {\n  handleSubmit = (e) => {\n    // e.preventDefault();\n    //this.setState({ ageValid: true })\n    //return;\n    this.ageValidation()\n    this.passwordValidation()\n    // this.setState({ageValid:true}, () => console.log(this.state.ageValid))\n    // this.setState({ ageValid: true })\n\n    console.log(this.state.ageValid)\n    console.log(this.state.passwordValid)\n    let dobMsg = document.getElementById(\"dobMsg\")\n    let passwordMsg = document.getElementById(\"passwordMsg\")\n    if (this.state.ageValid === false) {\n\n      dobMsg.style = \"display: inline\"\n      dobMsg.innerHTML = \"Only people who are 18 years old or older can register.\"\n    } else {\n      dobMsg.style = \"display: None\"\n    }\n\n    if (this.state.passwordValid === false) {\n      passwordMsg.style = \"display: inline\"\n      passwordMsg.innerHTML = \"password does not match!\"\n    } else {\n      passwordMsg.style = \"display: None\"\n    }\n    console.log(\"in handleClick!!!!!!!!!!\")\n    if (this.state.ageValid == true && this.state.passwordValid == true) {\n      localStorage.setItem(\"userId\", this.state.userId)\n      this.setState({ redirectMain: true })\n      console.log(\"in inner!!!!!!!!!!\")\n    }\n\n  }\n\n\n  render() {\n    return (\n      <div className=\"registration\">\n        <h1>Register</h1>\n        {this.state.redirectMain && <Redirect to='/Main' push />}\n        {/* <form className=\"registrationForm\" onSubmit={this.handleSubmit}> */}\n        <form className=\"registrationForm\">\n\n          <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\n            <div className=\"row ml-5\">\n              <label>Account Name:</label>\n              <input\n                name=\"accountName\"\n                placeholder=\"enter account name\"\n                pattern=\"^[^0-9][a-zA-Z0-9]*$\"\n                value={this.state.accountName}\n                onChange={this.change}\n                title=\"upper or lower case letters and numbers, may not start with a number\"\n                required\n              />\n            </div>\n            <div className=\"row ml-5 mt-2\">\n              <label>Email Address:</label>\n              <input\n                name=\"emailAddress\"\n                placeholder=\"enter email address\"\n                value={this.state.emailAddress}\n                type=\"email\"\n                onChange={this.change}\n                required\n              />\n            </div>\n\n            <div className=\"row ml-5 mt-2\">\n              <label>phone Number:</label>\n              <input\n                name=\"phoneNumber\"\n                placeholder=\"enter phone number\"\n                pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\"\n                value={this.state.phoneNumber}\n                type=\"tel\"\n                onChange={this.change}\n                title=\"The format should be xxxxxxxxxx\"\n                required\n              />\n            </div>\n\n            <div className=\"row ml-5 mt-2\">\n              <label>Date of Birth:</label>\n              <input\n                name=\"dob\"\n                value={this.state.dob}\n                type=\"date\"\n                onChange={this.change}\n                required\n              />\n              <span id=\"dobMsg\"></span>\n            </div>\n\n\n            <div className=\"row ml-5 mt-2\">\n              <label>Zipcode:</label>\n              <input\n                name=\"zipCode\"\n                placeholder=\"enter zip code\"\n                pattern=\"[0-9]{5}\"\n                value={this.state.zipCode}\n                type=\"text\"\n                onChange={this.change}\n                title=\"should be 5 digits\"\n                required\n              />\n            </div>\n\n            <div className=\"row ml-5 mt-2\">\n              <label>Password:</label>\n              <input\n                name=\"password\"\n                id=\"password\"\n                placeholder=\"enter password\"\n                value={this.state.password}\n                type=\"password\"\n                onChange={this.change}\n                required\n              />\n            </div>\n\n            <div className=\"row ml-5 mt-2\">\n              <label>re-enter:</label>\n              <input\n                name=\"passwordConfrm\"\n                id=\"passwordConfrm\"\n                placeholder=\"re-enter password\"\n                value={this.state.passwordConfrm}\n                type=\"password\"\n                onChange={this.change}\n                onKeyUp={this.passwordValidation}\n                required\n              />\n              <span id=\"passwordMsg\"></span>\n            </div>\n\n\n            <div className=\"button\">\n              <button type=\"submit\" className=\"btn btn-primary btn-sm mt-2\" onClick={this.handleSubmit}>Register</button>\n              <button className=\"btn btn-primary btn-sm ml-1 mt-2\" onClick={this.cancelForm}>Clear</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Registration\n","import React, { Component } from 'react';\nimport {Redirect, withRouter} from \"react-router-dom\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport class Login extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            data: \"\",\n            userId: \"\",\n            userName: \"\",\n            password: \"\",\n            userValid: false,\n            redirectMain: false\n        }\n        //bind the functions\n        this.change = this.change.bind(this)\n        this.userValidation = this.userValidation.bind(this)\n\n        //fetch the data once\n        this.fetchItems()\n\n        // const cookies = new Cookies()\n        // localStorage.setItem('userId', this.state.userId)\n    }\n\n    change = e => {\n        this.setState({\n          [e.target.name]: e.target.value\n        })\n        this.setState({userValid: false})\n      }\n\n    userValidation = () => {\n        let userValid = false\n        let passwordValid = false\n        this.state.data.map(n => {\n            if (this.state.userName === n.username) {\n                userValid = true\n                this.setState({userId: n.id}, () => {localStorage.setItem('userId', this.state.userId)})\n            }\n            if (this.state.password === n.address.street) {\n                passwordValid = true\n            }\n        })\n\n        if(userValid && passwordValid) {\n            console.log(this.state.userId)\n            this.setState({userValid: true}, () => {localStorage.setItem(\"userValid\", this.state.userValid)})\n            // return (\n            //     <Redirect\n            //       to={{\n            //         pathname: \"/Main\"\n            //       }}\n            //     />\n            //   );\n            // this.props.history.push(\n            //     {pathname:\"/Main\"}\n            // );\n            this.setState({redirectMain: true})\n        }\n    }\n\n    fetchItems = async () => {\n        const returned = await fetch(\n            'https://jsonplaceholder.typicode.com/users'\n        );\n        const items = await returned.json()\n        this.setState({ data: items })\n        // console.log(typeof this.state.data)\n        // console.log(this.state.data[0].id)\n        // console.log(this.state.data)\n        // console.log(this.state.data[0].address.street)\n    }\n\n    render() {\n        //eturn <Redirect to='/Main' push />\n        return (\n            <div className=\"login\">\n                {this.state.redirectMain && <Redirect to='/Main' push/>}\n                <h1>Log in</h1>\n                <div>\n                <input\n                    name=\"userName\"\n                    placeholder=\"Username\"\n                    value={this.state.userName}\n                    type=\"text\"\n                    onChange={this.change}\n                    required\n                />\n                </div>\n                <div className=\"mt-2\">\n                <input\n                    name=\"password\"\n                    placeholder=\"password\"\n                    value={this.state.password}\n                    type=\"text\"\n                    onChange={this.change}\n                    required\n                />\n                </div>\n                <div>\n                    <button className=\"btn btn-primary btn-sm mt-2 ml-5\" onClick={this.userValidation}>Login</button>\n                    {/* <button onClick={this.userValidation}>Login</button> */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Login)\n","import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Registration from './Registration'\nimport Login from './Login'\nimport {Router, Route, browserHistory} from \"react-router\"\n\nexport class Landing extends Component {\n    render() {\n        return (\n            <div>\n                <h1 style={{color: \"#3b5998\", width:400}}>Welcome to Ricebook</h1>\n                <div className=\"mt-9\">\n                <div className=\"row\">\n                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\n                        <Registration />\n                    </div>\n               \n               \n                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\n                        <Login />\n                    </div>\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Landing\n","import React, { Component } from 'react'\nimport { Row } from 'react-bootstrap'\n// import Card from 'react-bootstrap/Card'\n\nexport class Profile extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            userId: localStorage.getItem(\"userId\"),\n            userName: \"\",\n            email: \"\",\n            phone: \"\",\n            zipcode: \"\",\n            password: \"\"\n        }\n    }\n\n    componentDidMount = () => {\n        this.fetchUsers()\n    }\n\n    change = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    fetchUsers = async () => {\n        const returned = await fetch(\n            'https://jsonplaceholder.typicode.com/users'\n        );\n        const items = await returned.json()\n\n        console.log(items)\n\n        \n        document.getElementById(\"userName\").placeholder = items[this.state.userId-1].username\n        document.getElementById(\"email\").placeholder = items[this.state.userId-1].email\n        document.getElementById(\"phone\").placeholder = items[this.state.userId-1].phone\n        document.getElementById(\"zipcode\").placeholder = items[this.state.userId-1].address.zipcode\n        document.getElementById(\"password\").placeholder = items[this.state.userId-1].address.street\n    }\n\n\n    submitHandler = event => {\n        event.preventDefault();\n        event.target.className += \" was-validated\";\n\n        document.getElementById(\"userName\").placeholder = this.state.userName\n        document.getElementById(\"email\").placeholder = this.state.email\n        document.getElementById(\"phone\").placeholder = this.state.phone\n        document.getElementById(\"zipcode\").placeholder = this.state.zipcode\n        document.getElementById(\"password\").placeholder = this.state.password\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"ml-5\">Update Info</h1>\n\n\n                <form className=\"needs-validation\" onSubmit={this.submitHandler} noValidate>\n                    <div className=\"col-md-6 mb-3\">\n                        <div className=\"row\">\n                            <div className=\"col-md-3 mb-2 mt-2\">\n                                <label htmlFor=\"validationCustom01\">Account Name</label>\n                            </div>\n                            <div className=\"col-md-6 mb-3\">\n                                <input type=\"text\" className=\"form-control\" id=\"userName\" placeholder=\"Name\"\n                                    onChange={this.change}\n                                    name=\"userName\"\n                                    pattern=\"^[^0-9][a-zA-Z0-9]*$\"\n                                    required />\n                                <div className=\"valid-feedback\">\n                                    Looks good!\n                                    </div>\n                                <div className=\"invalid-feedback\">\n                                    \"upper or lower case letters and numbers, may not start with a number\"\n                                    </div>\n                            </div>\n                        </div>\n                        <div className=\"row mt-4\">\n                            <div className=\"col-md-3 mb-2 mt-2\">\n                                <label htmlFor=\"validationCustom02\">Email</label>\n                            </div>\n                            <div className=\"col-md-6 mb-3\">\n                                <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"email\"\n                                    onChange={this.change}\n                                    name=\"email\"\n                                    required />\n                                <div className=\"valid-feedback\">\n                                    Looks good!\n                                    </div>\n                                <div className=\"invalid-feedback\">\n                                    Please give a valid email\n                                    </div>\n                            </div>\n                        </div>\n                        <div className=\"row mt-4\">\n                            <div className=\"col-md-3 mb-2 mt-2\">\n                                <label htmlFor=\"validationCustom03\">Phone</label>\n                            </div>\n                            <div className=\"col-md-6 mb-3\">\n                                <input type=\"tel\" className=\"form-control\" id=\"phone\" placeholder=\"phone\"\n                                    onChange={this.change}\n                                    name=\"phone\"\n                                    required />\n                                <div className=\"valid-feedback\">\n                                    Looks good!\n                                    </div>\n                            </div>\n                        </div>\n                        <div className=\"row mt-4\">\n                            <div className=\"col-md-3 mb-2 mt-2\">\n                                <label htmlFor=\"validationCustom01\">Zipcode</label>\n                            </div>\n                            <div className=\"col-md-6 mb-3\">\n                                <input type=\"text\" className=\"form-control\" id=\"zipcode\" placeholder=\"zipcode\"\n                                    onChange={this.change}\n                                    name=\"zipcode\"\n                                    required />\n                                <div className=\"valid-feedback\">\n                                    Looks good!\n                                    </div>\n                            </div>\n                        </div>\n                        <div className=\"row mt-4\">\n                            <div className=\"col-md-3 mb-2 mt-2\">\n                                <label htmlFor=\"validationCustom01\">Password</label>\n                            </div>\n                            <div className=\"col-md-6 mb-3\">\n                                <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"password\"\n                                    onChange={this.change}\n                                    name=\"password\"\n                                    required />\n                                <div className=\"valid-feedback\">\n                                    Looks good!\n                                    </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-12 mb-3\">\n                                <button className=\"btn btn-primary btn-sm\" type=\"submit\">Submit form</button>\n                            </div>\n                        </div>\n                    </div>\n\n                </form>\n\n            </div>\n        )\n    }\n}\n\nexport default Profile\n","import React, { Component } from 'react'\nimport {Redirect} from \"react-router-dom\"\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nexport class User extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             newStatus: \"\",\n             redirectLogin: false,\n             redirectProfile: false\n        }\n        this.updateStatus = this.updateStatus.bind(this)\n    }\n\n    change = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    updateStatus = () => {\n        this.props.updateStatus(this.state.newStatus)\n        this.setState({newStatus: \"\"})\n    }\n\n    handleLogout = () => {\n        localStorage.setItem(\"userId\", \"\")\n        localStorage.setItem(\"userValid\", \"\")\n        this.setState({redirectLogin: true})\n        localStorage.setItem(\"redirectMainRegist\", false)\n    }\n\n    handleProfile = () => {\n        this.setState({redirectProfile: true})\n\n    }\n    \n    render() {\n        return (\n            <div>\n                {this.state.redirectLogin && <Redirect to='/' push/>}\n                {this.state.redirectProfile && <Redirect to='/Profile' push/>}\n                <Card style={{ width: '25rem' }}>\n                    <div>\n\n                    <button className=\"btn btn-primary btn-lg ml-3\" style={{ width: '10rem' }} onClick={this.handleLogout}>Log out</button>\n                    <button className=\"btn btn-primary btn-lg ml-5\" style={{ width: '10rem' }} onClick={this.handleProfile}>Profile</button>\n\n                    </div>\n            \n                    <Card.Img variant=\"top\" src=\"https://picsum.photos/800/500\" />\n                    <Card.Body>\n                        <Card.Title>{this.props.username}</Card.Title>\n                        <Card.Text>\n                            {this.props.status}\n                        </Card.Text>\n                        <div> \n                            <input \n                            value={this.state.newStatus} \n                            name=\"newStatus\"\n                            onChange={this.change}\n                            placeholder=\"New Status\"></input>\n                            <Button variant=\"primary\" \n                            onClick={this.updateStatus}>Update</Button>\n                        </div>\n                    </Card.Body>\n                </Card>\n\n\n            </div>\n        )\n    }\n}\n\nexport default User\n","import React, { Component } from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nexport class Friends extends Component {\n\n    render() {\n        return (\n            <div>\n                <Card style={{ width: '25rem' }}>\n                    <Card.Body>\n                        <Card style={{ width: '15rem' }}>\n                            <Card.Img variant=\"top\" src=\"https://picsum.photos/800/400\" />\n\n                            <Card.Title>{this.props.friendName}</Card.Title>\n                            <Card.Text>\n                                {this.props.friendStatus}\n                            </Card.Text>\n\n                        </Card>\n                    </Card.Body>\n\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default Friends\n","import React, { Component } from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nexport class Post extends Component {\n    render() {\n        return (\n            <div>\n                <Card style={{ width: '25rem' }}>\n                    <Card.Body>\n                        <Card style={{ width: '15rem' }}>\n                            <Card.Img variant=\"top\" src=\"https://picsum.photos/id/1/800/400\" />\n                            \n                                {/* <Card.Title>this should be the text of the post</Card.Title> */}\n                                <Card.Text>\n                                    {this.props.postText}\n                                </Card.Text>\n                           \n                        </Card>\n                        <div>\n                            <Button variant=\"primary\">Edit</Button>\n                            <Button variant=\"primary\">Comment</Button>\n                        </div>\n                    </Card.Body>\n\n\n                </Card>\n\n            </div>\n        )\n    }\n}\n\nexport default Post\n","import React, { Component } from 'react'\nimport User from './User.js'\nimport Friend from './Friend.js'\nimport Post from './Post.js'\nimport { Container } from 'react-bootstrap'\nimport { Col } from 'react-bootstrap'\nimport { Row } from 'react-bootstrap'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\n\n\nexport class Main extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            userId: localStorage.getItem(\"userId\"),             //id of the user who logged in\n            userName: \"\",          //name of the currently logged-in user \n            users: \"\",             //information of all users \n            posts: \"\",             //information of all posts\n            status: \"\",            //status of the logged in user\n            friendsList: [],        //list of ids of all the friends of the logged-in user \n            friends: [],           //list of all the friends including three initial friends and added friends later\n            newFriendName: \"\",      //the new friend name\n            userPosts: [],           //posts of the logged-in user \n            timeStamp: 0,             //timestamp of the post, add 1 when posting a new post \n            newPost: \"\",               //new post the user tries to post\n            searchPost: \"\",             //post that is searched in the search box\n            filteredPosts: \"\"           //posts after search \n            // array: [1, 2, 3]\n\n        }\n\n        this.change = this.change.bind(this)\n        this.addFriend = this.addFriend.bind(this)\n        this.getUserName = this.getUserName.bind(this)\n    }\n\n    componentDidMount = () => {\n        console.log('ok')\n        this.fetchPosts()\n        this.fetchUsers()\n    }\n\n\n\n\n    getUserFriendIds = () => {\n        let tempArray = []\n        let i\n        for (i = 1; i < 4; i++) {\n            let temp = this.state.userId + i\n            if (temp != 10) {\n                temp = temp % 10\n            }\n            tempArray.push(temp)\n        }\n        this.setState({ friendsList: tempArray })\n    }\n\n\n\n\n\n    // checkUserFriends = (user) => {\n    //     if (user.id === 1 || user.id === 2 || user.id === 3){\n    //         return user\n    //     }\n    // }\n\n    // getUserFriends = () => {\n    //     console.log(this.state.users)\n    //     let tempArray = this.state.users.filter(this.checkUserFriends)\n    //     this.setState({friends: tempArray})\n    // }\n\n\n\n\n    fetchUsers = async () => {\n        let id = this.state.userId - 1\n        const returned = await fetch(\n            'https://jsonplaceholder.typicode.com/users'\n        );\n        const items = await returned.json()\n\n        // this.setState({ users: items }, () => {\n        //     (() => { this.setState({ status: this.state.users[id].company.catchPhrase } )()\n        //     (() => { this.getUserFriends })()\n        // })})\n\n\n        this.setState({ users: items }, () =>\n            this.setState({ status: this.state.users[id].company.catchPhrase }))\n\n\n\n        // console.log(typeof this.state.data)\n        // console.log(this.state.data[0].id)\n        console.log(this.state.users)\n        // console.log(this.state.data[0].address.street)\n        // console.log(this.state.users[0].username)\n\n        this.getUserName()\n        this.fetchFriends()\n    }\n\n    getUserName = () => {\n        this.setState({ userName: this.state.users[this.state.userId - 1].username })\n    }\n\n\n    fetchFriends = async () => {\n        const returned = await fetch(\n            'https://jsonplaceholder.typicode.com/users'\n        );\n        const items = await returned.json()\n\n        this.getUserFriendIds()\n        let userFriends = this.state.users.map((user) => {\n            if (user.id === this.state.friendsList[0] || user.id === this.state.friendsList[1] || user.id === this.state.friendsList[2]) {\n                return user\n            }\n        })\n        let updatedUserFriends = []\n        for (let i = 0; i < userFriends.length; i++) {\n            if (userFriends[i] != null) {\n                updatedUserFriends.push(userFriends[i])\n            }\n            // userFriends[i] ? updatedUserFriends.push(userFriends[i]) : ''\n        }\n\n        this.setState({ friends: updatedUserFriends })\n\n    }\n\n\n    fetchPosts = async () => {\n        const returned = await fetch(\n            'https://jsonplaceholder.typicode.com/posts'\n        );\n        const items = await returned.json()\n        this.setState({ posts: items })\n        // console.log(typeof this.state.data)\n        // console.log(this.state.data[0].id)\n        let newPosts = this.state.posts\n\n        newPosts.map(newPost => {\n            newPost[\"timeStamp\"] = this.state.timeStamp\n        })\n\n        // newPosts[0][\"timestamp\"] = 0\n        this.setState({ posts: newPosts })\n        // console.log(this.state.data[0].address.street)\n        this.getUserPosts()\n    }\n\n    getUserPosts = () => {\n        let tempArray = []\n        this.state.posts.map(post => {\n            if (post.userId == this.state.userId) {\n                console.log(\"in map function!!!!!!!!!!!!!!!!!!!!!!!\")\n                tempArray.push({\n                    userId: post.userId,\n                    timeStamp: post.timeStamp,\n                    body: post.body\n                }\n                )\n            }\n        })\n        this.setState({ userPosts: tempArray }, () => {\n            this.setState({filteredPosts: this.state.userPosts})\n        })\n        console.log(this.state.filteredPosts)\n        console.log(this.state.userPosts)\n        console.log(typeof this.state.userId)\n    }\n\n\n\n    change = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n\n    //push a new json object every time this function is called\n    // addFriend = () => {\n    //     let tempArray = this.state.friendsList\n    //     let dupFlg = false\n\n    //     this.state.friendsList.map(existingId => {\n    //         if (this.state.newFriendId === existingId) {\n    //             dupFlg = true\n    //         }\n    //     })\n    //     if (this.state.newFriendId > 0 && this.state.newFriendId <= 10 && dupFlg === false) {\n    //         tempArray.push(this.state.newFriendId)\n    //         this.setState({friendsList : tempArray})\n    //     } \n    // }\n\n    addFriend = () => {\n        let tempArray = this.state.friends\n        let newFriend = {\n            company: { catchPhrase: \"In a relationship\" },\n            username: this.state.newFriendName\n        }\n        if (newFriend.username != \"\") {\n            tempArray.push(newFriend)\n        }\n        // tempArray.push(newFriend)\n        this.setState({ friends: tempArray })\n    }\n\n\n    addPost = () => {\n        let increasedStamp = this.state.timeStamp + 1\n        this.setState({ timeStamp: increasedStamp }, () => {\n            console.log(\"in updateUserPosts\")\n            let tempArray = this.state.userPosts\n            let newPost = {\n                body: this.state.newPost,\n                timeStamp: this.state.timeStamp,\n                userId: this.state.userId,\n                userName: this.state.userName\n            }\n            tempArray.push(newPost)\n            this.setState({ userPosts: tempArray })\n            this.state.userPosts.sort((a, b) => parseInt(b.timeStamp) - parseInt(a.timeStamp))\n            this.setState({filteredPosts: this.state.userPosts})\n            this.clearPost()\n\n        })\n        // tempArray.sort((a, b) => parseInt(b.timeStamp) - parseInt(a.timeStamp))\n        // this.setState({userPosts: tempArray})\n    }\n\n    clearPost = () => {\n        this.setState({ newPost: \"\" })\n    }\n\n    handleStatusChange = newStatus => {\n        this.setState({ status: newStatus })\n\n    }\n\n    handleSearch = e => {\n        this.setState({searchPost: e.target.value}, () => this.filterPost())\n    }\n\n\n    filterPost = () => {\n        let filtered = this.state.userPosts.filter(post => {\n            return post.body.toLowerCase().includes(this.state.searchPost.toLowerCase())\n        }) \n        this.setState({filteredPosts: filtered})\n        console.log(this.state.filteredPosts)\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col>\n                        <div>\n                            <User username={this.state.users ? this.state.users[this.state.userId - 1].username : ''}\n                                status={this.state.status ? this.state.status : ''}\n                                updateStatus={this.handleStatusChange} />\n\n\n                            <Card style={{ width: '25rem' }}>\n\n                                {this.state.friends.map(friend => (\n                                    <Friend friendName={this.state.friends ? friend.username : ''}\n                                        friendStatus={this.state.friends ? friend.company.catchPhrase : ''} />\n                                ))}\n\n                                <div>\n                                    <input\n                                        name=\"newFriendName\"\n                                        value={this.state.newFriendName}\n                                        onChange={this.change}\n                                        placeholder=\"User\">\n                                    </input>\n                                    <Button variant=\"primary\" onClick={this.addFriend}>Add</Button>\n                                </div>\n                            </Card>\n\n\n\n                            {/* {this.state.array.map(number => (\n                                <Friend></Friend>\n                            ))} */}\n                            {/* <Friend></Friend> */}\n                        </div>\n                    </Col>\n                    <Col>\n                        <Card style={{ width: '25rem' }}>\n\n                            <Row>\n\n                                <input type=\"file\" />\n                                <textarea type=\"text\" name=\"newPost\" value={this.state.newPost}\n                                    onChange={this.change} placeholder=\"Your post here\" />\n                           \n                                    {/* <FormControl placeholder=\"Your post here\" as=\"textarea\" \n                                    value={this.state.newPost} onChange={this.change}/> */}\n                             \n                            </Row>\n\n\n                            <Row>\n                                    \n                                <Button variant=\"primary\" onClick={this.clearPost}>Cancel</Button>\n                                <Button variant=\"primary\" onClick={this.addPost}>Post</Button>\n                            </Row>\n                        </Card>\n\n                    <Card style={{ width: '25rem'}}>\n                        <div>\n                            <input width=\"25rem\" type=\"text\" onChange={this.handleSearch} placeholder=\"search here\"/>\n                        </div>\n\n                    </Card>                   \n                        \n\n\n                        {/* <div>\n                            {this.state.userPosts.map(userPost => (\n                                <Post postText={this.state.userPosts ? userPost.body : ''} />\n                            )\n                            )}\n                        </div> */}\n\n                        <div>\n                            {\n                                this.state.filteredPosts ? this.state.filteredPosts.map(post => (\n                                    <Post postText={post.body} />\n                                )) \n                                : \n                                ''\n                            }\n                        </div>\n\n                    </Col>\n                </Row>\n\n            </div>\n        )\n    }\n}\n\nexport default Main\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\n\nexport default function Picture() {\n    return (\n        <div>\n            {/* <Card style={{ width: '20rem' }}>\n                <Card.Body>\n                    <Card style={{ width: '15rem' }}>\n                        <Card.Img variant=\"top\" src=\"https://picsum.photos/1000/500\" />\n                    </Card>\n                    <div className=\"mt-2 ml-4\">\n                        <Button variant=\"primary\" type=\"file\">Upload new picture</Button>\n                    </div>\n                </Card.Body>\n\n\n            </Card> */}\n            <div className=\"mt-5 ml-5\">\n                <img src=\"https://picsum.photos/500/300\"/>\n            </div>\n            <div className=\"mt-3\">\n                <input className=\"px-5\" type=\"file\" />\n            </div>\n            \n\n        </div>\n    )\n}\n","import Picture from './Picture'\nimport Update from './Update'\nimport './Profile.css'\nimport {Redirect} from \"react-router-dom\"\nimport React, { Component } from 'react'\n\nexport class Profile extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             redirectMain: false\n        }\n    }\n\n    handleMain = () => {\n        this.setState({redirectMain: true})\n    } \n    \n    render() {\n        return (\n            \n            <div className=\"profile\">\n                {this.state.redirectMain && <Redirect to='/Main' push/>}\n                <div className=\"header\">\n                <h1>Ricebook</h1>\n                </div>\n                <button className=\"btn btn-primary btn-lg ml-3\" style={{ width: '10rem' }} onClick={this.handleMain}>Main</button>\n                <div className=\"row\">\n                    <div className=\"col-md-6 mb-2 mt-10\">\n                        <Picture />\n                    </div>\n\n\n                    <div className=\"col-md-6 mb-2 mt-2\">\n                        <Update />\n                    </div>\n                </div>\n\n\n            </div>\n        )\n    }\n}\n\nexport default Profile\n","import React from 'react'\nimport Registration from './components/Landing/Registration'\nimport Login from './components/Landing/Login'\nimport Landing from './components/Landing/Landing'\nimport Update from './components/Profile/Update'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport User from './components/Main/User'\nimport Main from './components/Main/Main'\nimport Profile from './components/Profile/Profile'\nimport { BrowserRouter as Router, Route, Switch, Redirect} from \"react-router-dom\"\nimport { Col } from 'react-bootstrap'\nimport { Row } from 'react-bootstrap'\n\n\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={props => <Landing {...props} />}\n            // component={() => <Landing />}\n          />\n          <PrivateRoute path=\"/Main\" exact component={Main} />\n          <PrivateRoute path=\"/Profile\" exact component={Profile} />\n        </Switch>\n      </div>\n    </Router>\n    \n\n      // {/* <Registration /> */}\n      // {/* <Login />  */}\n      // {/* <Landing /> */}\n      // {/* <User /> */}\n      // {/* <Main /> */}\n      // {/* <Update /> */}\n      // {/* <Profile /> */}\n    \n  );\n}\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      if ((localStorage.getItem(\"userValid\") || \"false\") === \"true\") {\n        return <Component {...props} />;\n      } else {\n        return (\n          <Redirect\n            to={{\n              pathname: \"/\"\n            }}\n          />\n        );\n      }\n    }}\n  />\n);\n\nexport default App;\n\n//set the localstorage and use redirect in onSubmit or onClick or userValidation\n//create userValid localstorage\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}